{"name": "test_login_page", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000104c9a4c8 chromedriver + 4302024\n1   chromedriver                        0x0000000104c92e10 chromedriver + 4271632\n2   chromedriver                        0x00000001048c419c chromedriver + 278940\n3   chromedriver                        0x00000001049062c4 chromedriver + 549572\n4   chromedriver                        0x000000010493ec5c chromedriver + 781404\n5   chromedriver                        0x00000001048fb004 chromedriver + 503812\n6   chromedriver                        0x00000001048fb9ec chromedriver + 506348\n7   chromedriver                        0x0000000104c62510 chromedriver + 4072720\n8   chromedriver                        0x0000000104c66fbc chromedriver + 4091836\n9   chromedriver                        0x0000000104c49754 chromedriver + 3970900\n10  chromedriver                        0x0000000104c678a4 chromedriver + 4094116\n11  chromedriver                        0x0000000104c3c6d4 chromedriver + 3917524\n12  chromedriver                        0x0000000104c84b08 chromedriver + 4213512\n13  chromedriver                        0x0000000104c84c84 chromedriver + 4213892\n14  chromedriver                        0x0000000104c92a08 chromedriver + 4270600\n15  libsystem_pthread.dylib             0x000000018adec26c _pthread_start + 148\n16  libsystem_pthread.dylib             0x000000018ade708c thread_start + 8", "trace": "self = <Tests.test_negative_login.TestLogin object at 0x1028dd150>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"84980548c61d46b82b942e032bce4008\")>\n\n    @pytest.mark.sanity\n    def test_login_page(self, driver):\n        uname = TestData.invalid_Uname\n        password = TestData.Invalid_pass\n        logger.info(\"Negative test login started\")\n        invalid_login = LoginPage(driver)\n>       invalid_login.do_login(uname, password)\n\ntest_negative_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pages/loginPage.py:23: in do_login\n    self.click(self.LOGIN_CLICK)\n../Pages/basePage.py:20: in click\n    element = WebDriverWait(self.driver, 20).until(ec.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"84980548c61d46b82b942e032bce4008\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x102908540>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000104c9a4c8 chromedriver + 4302024\nE       1   chromedriver                        0x0000000104c92e10 chromedriver + 4271632\nE       2   chromedriver                        0x00000001048c419c chromedriver + 278940\nE       3   chromedriver                        0x00000001049062c4 chromedriver + 549572\nE       4   chromedriver                        0x000000010493ec5c chromedriver + 781404\nE       5   chromedriver                        0x00000001048fb004 chromedriver + 503812\nE       6   chromedriver                        0x00000001048fb9ec chromedriver + 506348\nE       7   chromedriver                        0x0000000104c62510 chromedriver + 4072720\nE       8   chromedriver                        0x0000000104c66fbc chromedriver + 4091836\nE       9   chromedriver                        0x0000000104c49754 chromedriver + 3970900\nE       10  chromedriver                        0x0000000104c678a4 chromedriver + 4094116\nE       11  chromedriver                        0x0000000104c3c6d4 chromedriver + 3917524\nE       12  chromedriver                        0x0000000104c84b08 chromedriver + 4213512\nE       13  chromedriver                        0x0000000104c84c84 chromedriver + 4213892\nE       14  chromedriver                        0x0000000104c92a08 chromedriver + 4270600\nE       15  libsystem_pthread.dylib             0x000000018adec26c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x000000018ade708c thread_start + 8\n\n../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "attachments": [{"name": "log", "source": "0060d0bf-3147-4323-9397-1bdf23bcc9f7-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "dd4fc62d-8609-4a6b-96f7-eefdffef6860-attachment.txt", "type": "text/plain"}], "start": 1717192140804, "stop": 1717192161118, "uuid": "d81c5971-bf2e-421f-a236-95b342b9c37b", "historyId": "33087646b8c05de395d0c12a2947dba3", "testCaseId": "33087646b8c05de395d0c12a2947dba3", "fullName": "Tests.test_negative_login.TestLogin#test_login_page", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_negative_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Chethans-MacBook-Pro.local"}, {"name": "thread", "value": "23585-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_negative_login"}]}