{"name": "test_login_page", "status": "broken", "statusDetails": {"message": "TypeError: exceptions must derive from BaseException", "trace": "request = <SubRequest 'driver' for <Function test_login_page>>, browser = None\n\n    @pytest.fixture(scope=\"class\")\n    def driver(request, browser):\n        base_url = read_configuration('Default', 'BaseUrl')\n        if browser == \"chrome\":\n            driver = webdriver.Chrome()\n        elif browser == \"firefox\":\n            driver = webdriver.Firefox()\n        else:\n>           raise print(\"enter valid browser should be chrome or firefox\")\nE           TypeError: exceptions must derive from BaseException\n\nconftest.py:27: TypeError"}, "attachments": [{"name": "stdout", "source": "32479986-7c12-4836-8f84-196d0a0052a7-attachment.txt", "type": "text/plain"}], "start": 1717187228278, "stop": 1717187228278, "uuid": "63d30f19-13f4-40c3-869a-4671a201333c", "historyId": "33087646b8c05de395d0c12a2947dba3", "testCaseId": "33087646b8c05de395d0c12a2947dba3", "fullName": "Tests.test_negative_login.TestLogin#test_login_page", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_negative_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Chethans-MacBook-Pro.local"}, {"name": "thread", "value": "17005-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_negative_login"}]}