{"name": "test_logout", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x0000000100e664c8 chromedriver + 4302024\n1   chromedriver                        0x0000000100e5ee10 chromedriver + 4271632\n2   chromedriver                        0x0000000100a9019c chromedriver + 278940\n3   chromedriver                        0x0000000100ad22c4 chromedriver + 549572\n4   chromedriver                        0x0000000100b0ac5c chromedriver + 781404\n5   chromedriver                        0x0000000100ac7004 chromedriver + 503812\n6   chromedriver                        0x0000000100ac79ec chromedriver + 506348\n7   chromedriver                        0x0000000100e2e510 chromedriver + 4072720\n8   chromedriver                        0x0000000100e32fbc chromedriver + 4091836\n9   chromedriver                        0x0000000100e15754 chromedriver + 3970900\n10  chromedriver                        0x0000000100e338a4 chromedriver + 4094116\n11  chromedriver                        0x0000000100e086d4 chromedriver + 3917524\n12  chromedriver                        0x0000000100e50b08 chromedriver + 4213512\n13  chromedriver                        0x0000000100e50c84 chromedriver + 4213892\n14  chromedriver                        0x0000000100e5ea08 chromedriver + 4270600\n15  libsystem_pthread.dylib             0x000000018adec26c _pthread_start + 148\n16  libsystem_pthread.dylib             0x000000018ade708c thread_start + 8", "trace": "self = <Tests.test_login.TestLogin object at 0x102bd20d0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"5040bb78e051e4ea6938730b6102a2ea\")>\n\n    @pytest.mark.sanity\n    def test_logout(self, driver):\n        logout = Logout(driver)\n        time.sleep(5)\n>       logout.click_Ham_and_logout_button()\n\ntest_login.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../Pages/logoutPage.py:16: in click_Ham_and_logout_button\n    self.click(self.HAMBURGER_MENU)\n../Pages/basePage.py:20: in click\n    element = WebDriverWait(self.driver, 20).until(ec.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5040bb78e051e4ea6938730b6102a2ea\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x10269e340>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x0000000100e664c8 chromedriver + 4302024\nE       1   chromedriver                        0x0000000100e5ee10 chromedriver + 4271632\nE       2   chromedriver                        0x0000000100a9019c chromedriver + 278940\nE       3   chromedriver                        0x0000000100ad22c4 chromedriver + 549572\nE       4   chromedriver                        0x0000000100b0ac5c chromedriver + 781404\nE       5   chromedriver                        0x0000000100ac7004 chromedriver + 503812\nE       6   chromedriver                        0x0000000100ac79ec chromedriver + 506348\nE       7   chromedriver                        0x0000000100e2e510 chromedriver + 4072720\nE       8   chromedriver                        0x0000000100e32fbc chromedriver + 4091836\nE       9   chromedriver                        0x0000000100e15754 chromedriver + 3970900\nE       10  chromedriver                        0x0000000100e338a4 chromedriver + 4094116\nE       11  chromedriver                        0x0000000100e086d4 chromedriver + 3917524\nE       12  chromedriver                        0x0000000100e50b08 chromedriver + 4213512\nE       13  chromedriver                        0x0000000100e50c84 chromedriver + 4213892\nE       14  chromedriver                        0x0000000100e5ea08 chromedriver + 4270600\nE       15  libsystem_pthread.dylib             0x000000018adec26c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x000000018ade708c thread_start + 8\n\n../.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1717189611757, "stop": 1717189636800, "uuid": "ad3b840e-15ae-4397-85f1-1928033d6786", "historyId": "316ef908ee5b579d92b7dd34c0b9c503", "testCaseId": "316ef908ee5b579d92b7dd34c0b9c503", "fullName": "Tests.test_login.TestLogin#test_logout", "labels": [{"name": "tag", "value": "sanity"}, {"name": "tag", "value": "@pytest.mark.usefixtures('driver')"}, {"name": "parentSuite", "value": "Tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "Chethans-MacBook-Pro.local"}, {"name": "thread", "value": "20972-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Tests.test_login"}]}